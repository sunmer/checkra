{"version":3,"file":"main-DaoUbHhW.js","sources":["../../demo/index.html?html-proxy&index=1.js"],"sourcesContent":["\n    // Vite provides import.meta.env automatically\n    const isDev = import.meta.env.DEV;          // True during 'vite dev'\n    const isPreprod = import.meta.env.MODE === 'preprod'; // True during 'vite build --mode preprod'\n    // Assume anything else is production (e.g., deployed demo) or needs CDN\n    const isProductionLike = !isDev && !isPreprod;\n\n    console.log(`[Checkra Loader] Mode: ${import.meta.env.MODE}, Dev: ${isDev}, Preprod: ${isPreprod}, Prod-Like: ${isProductionLike}`);\n\n    function loadScript(src, type) {\n      return new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = src;\n        if (type) script.type = type;\n        script.onload = resolve;\n        script.onerror = reject;\n        document.head.appendChild(script);\n      });\n    }\n\n    function loadStyle(href) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      document.head.appendChild(link);\n    }\n\n    function initializeCheckra() {\n      // Standard UMD initialization (for preprod/production-like)\n      if (window.checkra && typeof window.checkra.initCheckra === 'function') {\n        console.log('[Checkra Loader] Initializing Checkra (UMD)...');\n        window.checkra.initCheckra({ isVisible: true });\n      } else {\n        console.error('[Checkra Loader] Checkra UMD global not found for initialization.');\n      }\n    }\n\n    if (isDev) {\n      // DEV MODE: Load directly from source using module script below.\n      console.log('[Checkra Loader] Dev mode: Loading from source via module script.');\n      // The <script type=\"module\"> at the bottom handles this.\n\n    } else if (isPreprod) {\n      // PREPROD MODE: Load built UMD files from ../dist relative to the *built* demo/index.html\n      console.log('[Checkra Loader] Preprod mode: Loading from local ../dist');\n\n      // Path Explanation:\n      // - 'npm run build:demo' builds 'demo/index.html' into 'demo-dist/index.html'.\n      // - 'npm run preview:demo' serves the 'demo-dist' directory.\n      // - Therefore, from 'demo-dist/index.html', the path to the library build output\n      //   in the 'dist' folder is indeed '../dist/'.\n      loadStyle('./style.css'); // Load from demo-dist root\n\n      // *** CORRECTION HERE: Use the correct UMD filename from vite.config.ts ***\n      loadScript('./checkra.umd.cjs') // Load from demo-dist root\n        .then(initializeCheckra)\n        .catch(err => console.error('[Checkra Loader] Failed to load preprod script:', err));\n\n    } else { // isProductionLike (or static hosting)\n      // PRODUCTION-LIKE / STATIC: Fallback to loading from CDN (unpkg)\n      console.log('[Checkra Loader] Production-like mode: Loading from CDN.');\n      // Use the version injected by Vite build\n      const version = import.meta.env.PACKAGE_VERSION || 'latest'; // Fallback to 'latest' if undefined\n      console.log(`[Checkra Loader] Using version: ${version}`);\n      loadStyle(`https://unpkg.com/checkra@${version}/dist/style.css`);\n      // *** CORRECTION HERE: Use the correct UMD filename from unpkg ***\n      loadScript(`https://unpkg.com/checkra@${version}/dist/checkra.umd.cjs`)\n        .then(initializeCheckra)\n        .catch(err => console.error('[Checkra Loader] Failed to load CDN script:', err));\n    }\n  "],"names":["isDev","isPreprod","isProductionLike","loadScript","src","type","resolve","reject","script","loadStyle","href","link","initializeCheckra","err"],"mappings":"kuBAEI,MAAMA,EAAQ,GACRC,EAAY,GAEZC,EAA6B,GAEnC,QAAQ,IAAI,wCAAwDF,CAAK,cAAcC,CAAS,gBAAgBC,CAAgB,EAAE,EAElI,SAASC,EAAWC,EAAKC,EAAM,CAC7B,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CAChC,MAAAC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,IAAMJ,EAEbI,EAAO,OAASF,EAChBE,EAAO,QAAUD,EACR,SAAA,KAAK,YAAYC,CAAM,CAAA,CACjC,CACH,CAEA,SAASC,EAAUC,EAAM,CACjB,MAAAC,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,IAAM,aACXA,EAAK,KAAOD,EACH,SAAA,KAAK,YAAYC,CAAI,CAChC,CAEA,SAASC,GAAoB,CAEvB,OAAO,SAAW,OAAO,OAAO,QAAQ,aAAgB,YAC1D,QAAQ,IAAI,gDAAgD,EAC5D,OAAO,QAAQ,YAAY,CAAE,UAAW,GAAM,GAE9C,QAAQ,MAAM,mEAAmE,CAErF,CASE,QAAQ,IAAI,2DAA2D,EAOvEH,EAAU,aAAa,EAGZN,EAAA,mBAAmB,EAC3B,KAAKS,CAAiB,EACtB,MAAMC,GAAO,QAAQ,MAAM,kDAAmDA,CAAG,CAAC"}